:root {
  /* Defaults */
  --global-border-radius: 2px;
  --default-border: 1px solid color(var(--base-gray) tint(70%));
  --default-easing: cubic-bezier(0.250,  0.460, 0.450, 0.940);
  --default-transition-duration: .3s;

  /*default breakpoint for responsive-overflow. For a more robust breakpoint library see xxx.*/
  @custom-media --axis-breakpoint (width < 768px);
  
  /* Colors */
  --base-gray: #767d84;
  --color-primary: #0074D9;
  --color-accent: #c25;
  --color-warning: #d83030;
  --selection-highlight: color(var(--color-primary) a(15%));

  /* Typography */
  --base-font-size: 16px;
  --base-font-weight: normal;
  --font-stack: var(--sans);
  --font-color: color(var(--base-gray) shade(35%));
  --line-height: 1.5;
  --paragraph-line-height: var(--line-height);
  --paragraph-margin: .75rem;
  --heading-size-multiplier: 1;  /* Change this to scale all headers at once */
  --heading-line-height: 1.3;
  --heading-font-weight: bolder;
  --heading-display: block;
  --heading-margin: var(--paragraph-margin);

  /* Font Stacks */
  --sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  --helvetica: 'Helvetica Neue', HelveticaNeue, Helvetica, Arial, sans-serif;
  --serif: Georgia, Cambria, 'Times New Roman', Times, serif;
  --monospace: Monaco, Menlo, Consolas, 'Courier New', monospace;

  /* Buttons */
  --button-med-size: .9rem;
  --button-large-size: 1.3rem;
  --button-small-size: .75rem;
  --button-outline-stroke: 1px;
  --button-color: var(--color-primary);
  --button-text-color: #fff;

  /* Layout */
  --hr-color: color(var(--base-gray) a(30%));
  --hr-size: 1px;

  /* Forms */
  --input-width: auto;
  --input-max-width: 25rem;
  --input-min-width: auto;
  --input-border-color: color(var(--base-gray) tint(70%));
  --input-border-hover-color: color(var(--input-border-color) shade(20%));
  --input-bg-color: transparent;
  --input-text-color: inherit;
  --input-height: auto;
  --input-padding: .4em .65em;
  --input-stroke: 1px;
  --input-focus-inset: 1px;
  --input-focus-color: var(--color-primary);
  --input-autofill-bg-color: var(--base-gray);
  --input-autofill-text-color: white;
  /*todo: textarea settings*/

  --label-display: inline-block;
  --label-align: left;
  --label-min-width: 350px;
  /*Need label width and max width?*/

  --fieldset-border: var(--default-border);

  /*select box*/
  --input-select-max-width: var(--input-max-width);
  --input-select-arrow-color: color(var(--base-gray) tint(50%));
  --input-select-arrow-size: .4em;
  --input-select-bg-color: var(--input-bg-color);

  /* Radio buttons and checkboxes */
  --control-label-text-size: var(--base-font-size);
  --input-control: transparent;
  --input-control-active: var(--color-primary);
  --input-control-border: color(var(--base-gray) tint(70%));
  --input-control-disabled: color(var(--base-gray) tint(70%));
  --input-control-disabled-checked: color(var(--input-control-active) tint(40%));
  --input-control-checkmark: #fff;
}
/* ----- */
/* Reset */
/* ----- */

:root {
  /* Mixin: Border Box HTML */
  /* Add border box to every element in your project. Used in your project root. Included in sanitize, below.. */
  /* http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */

  --border-box-html {
    html {
      box-sizing: border-box;
    }

    *,
    *:before,
    *:after {
      box-sizing: inherit;
    }
  }
}
/* ----------- */
/* Interaction */
/* ----------- */

:root {
  /* transition preset */
  --transition {
    transition: all var(--default-transition-duration) var(--default-easing)
  }

  /* hover underline */
  --hover-underline {
    border-bottom: 1px solid transparent;

    &:hover {
      border-bottom: 1px solid currentColor
    }
  }

  /* hover pop */
  --hover-pop {
    &:hover {
      transform: scale(1.1)
    }
  }

  --click-down {
    transition-duration: .2s;

    &:active {
      transform: translateY(2px)
    }
  }

  --click-inset {
    &:active {
      box-shadow: inset 0px .5rem 1rem rgba(0, 0, 0, 0.35);
    }
  }

  --click-shrink {
    &:active {
      transform: scale(.95)
    }
  }
}
/* ---------- */
/* Typography */
/* ---------- */

:root {

  /* paragraph preset */
  --p {
    margin: var(--paragraph-margin) 0¡¡;
    line-height: var(--paragraph-line-height);
    font-size: var(--base-font-size);
  }

  /* "small" text preset */
  --small {
    font-size: 70%;
    opacity: .7;
    font-weight: var(--base-font-weight);
  }

  /* heading base - used across all headings below */
  --heading-base {
    display: var(--heading-display);
    font-weight: var(--heading-font-weight)
  }

  /* heading sizes, used in headings below */
  --h1-size: calc(2.4rem * var(--heading-size-multiplier));
  --h2-size: calc(1.8rem * var(--heading-size-multiplier));
  --h3-size: calc(1.5rem * var(--heading-size-multiplier));
  --h4-size: calc(1.3rem * var(--heading-size-multiplier));
  --h5-size: calc(1.0rem * var(--heading-size-multiplier));
  --h6-size: calc(0.9rem * var(--heading-size-multiplier));

  /* h1 preset */
  --h1 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h1-size);
    line-height: var(--heading-line-height);
  }

  /* h2 preset */
  --h2 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h2-size);
    line-height: var(--heading-line-height);
  }

  /* h3 preset */
  --h3 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h3-size);
    line-height: var(--heading-line-height);
  }

  /* h4 preset */
  --h4 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h4-size);
    line-height: var(--heading-line-height);
  }

  /* h5 preset */
  --h5 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h5-size);
    line-height: var(--heading-line-height);
  }


  /* h6 preset */
  --h6 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h6-size);
    line-height: var(--heading-line-height);
    text-transform: uppercase;
  }


  /* blockquote preset */
  --blockquote {
    line-height: var(--heading-line-height);
    border-left: .4rem solid var(--color-primary);
    margin: 1em 0;
    padding-left: 1.5em;

    & > p {
      font-weight: var(--base-font-weight);
      font-size: 1.27rem;
      line-height: 127%;
      line-height: inherit;
      margin-top: 0;
    }

    & > cite,
    & > footer,
    & > figcaption {
      color: color(var(--base-gray) lightness(55%));

      &:before {
        content: '\2014';
      }
    }
  }

  /* Ellipsis - Truncate text to the width of its container.. */
  --ellipsis {
    white-space: nowrap;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: normal;
  }

  /* Custom color for user-selected text */
  --text-selection {
    &::selection {
      background: var(--selection-highlight);
    }
  }


  /* Default styling for links */
  --link {
    color: var(--color-primary);
    text-decoration: none;
    @apply --transition;
  }

  /* Reset default link styling */
  --reset-link {
    border: none;
    text-decoration: none;
    color: initial;

    &:hover {
      border: none;
      text-decoration: none;
      color: initial;
    }
  }

  /* ul preset */
  --ul {
    margin: 0.32rem 0.94rem;
    padding-left: 1rem;

    & li {
      list-style-type: disc;
      padding: 0.125rem;
    }
  }

  /* ol preset */
  --ol {
    margin: 0.32rem 1.125rem;
    padding-left: 1rem;

    & li {
      list-style-type: decimal;
      padding: 0.125rem;
    }
  }

  /* inline list */
  --inline-list {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    & li {
      list-style-type: none;
    }

    & li:not(:last-child) {
      margin-right: 1.5rem;
    }
  }

  /* reset list */
  --reset-list {
    display: initial;
    margin: 0;
    padding: 0;

    & li {
      list-style-type: none;
      padding: 0;
      margin: 0
    }
  }


  /* Additive */

  --base {
    html {
      font-size: var(--base-font-size);
      line-height: var(--line-height);
      -ms-text-size-adjust: 100%;
    	-webkit-text-size-adjust: 100%; 
    }

    body {
      font-family: var(--font-stack);
      font-size: var(--base-font-size);
      color: color(var(--font-color));
      font-weight: var(--base-font-weight);
    }
  }

  --headers {
    h1 {
      @apply --h1;
    }

    h2 {
      @apply --h2;
    }

    h3 {
      @apply --h3;
    }

    h4 {
      @apply --h4;
    }

    h5 {
      @apply --h5;
    }

    h6 {
      @apply --h6;
    }
  }

  --lists {
    ul {
      @apply ul;
    }

    li {
      @apply li;
    }
  }

  --typography {
    @apply --base;
    @apply --headers;
    @apply --lists;
    @apply --text-selection;

    p {
      @apply --p;
    }

    a {
      @apply --link;
    }

    blockquote {
      @apply --blockquote;
    }
  }
}
/* ----------- */
/* Code Blocks */
/* ----------- */

:root {
  /* Inline code block preset */
  --code {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(85%));
    border-radius: var(--global-border-radius);
    color: var(--color-accent);
    font-family: var(--monospace);
    font-size: .72rem;
    padding: .08rem .3rem;
    white-space: normal;
  }

  /* Preformatted text preset */
  --pre {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(80%));
    border-radius: var(--global-border-radius);
    display: block;
    font-family: var(--monospace);
    font-size: inherit;
    line-height: inherit;
    margin: 0 0 1rem;
    padding: .5rem .8rem;
    white-space: pre-wrap;
  }

  --pre-dark {
    background-color: color(var(--base-gray) lightness(20%));
    color: color(var(--base-gray) lightness(75%));
    border: 1px solid color(var(--base-gray) lightness(14%));
  }

  /*todo: add --pre-dark*/


  /* Additive Apply: Code blocks */
  --code-blocks {
    code {
      @apply --code;
    }

    pre {
      @apply --pre;
    }
  }
}
/* --------- */
/* Utilities */
/* --------- */

:root {
  /* Debug - needs comment */

  --debug {
    border: 1px solid MediumPurple;

    & > * {
      border: 1px solid DarkKhaki;
    }

    & > * > * {
      border: 1px solid MediumTurquoise;
    }

    & > * > * > * {
      border: 1px solid LightSlateGray;
    }

    & > * > * > * > * {
      border: 1px solid LightBlue;
    }

    & > * > * > * > * > * {
      border: 1px solid MediumSlateBlue;
    }

    & > * > * > * > * > * > * {
      border: 1px solid DeepSkyBlue;
    }

    & > * > * > * > * > * > * > * {
      border: 1px solid DarkSeaGreen;
    }

    & img {
      border: 1px solid #f00;
      filter: hue-rotate(330deg) contrast(.75) saturate(6);
    }

    & img[alt] {
      border: 1px solid LimeGreen;
      filter: none
    }

    & img[alt=""] {
      border: 1px solid gold;
      filter: contrast(1) saturate(2)
    }

    & a {
      background: rgba(#f00, .1);
      border: 1px solid #f00;
    }

    & a[title] {
      background: none;
      border-color: LimeGreen;
    }

    & style {
      border: block;
    }

    & [style], style, [class=""], [id=""], a[href="#"] {
      background: rgba(yellow, .2);
      border: 1px solid gold;
    }
  }
}
/* ------ */
/* Layout */
/* ------ */

:root {
  /* hr - horizontal rule preset */
  --hr {
    border: 0;
    border-bottom: var(--hr-size) solid var(--hr-color);
    height: 0;
    padding: 0;
    margin: 1.5rem 0
  }

  --layout {
    hr {
      @apply --hr
    }
  }
}
/* ------ */
/* Button */
/* ------ */

:root {
  /* base styling needed for --button */
  --button-base {
    @apply --transition;
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    background-color: var(--button-color);
    color: var(--button-text-color);
    user-select: none;


    &:hover, &:active {
      border: var(--button-outline-stroke) solid color(var(--button-color) shade(20%));
      background-color: color(var(--button-color) shade(20%));
    }
  }

  /* the button */
  --button {
    @apply --button-base;
    padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    font-size: var(--button-med-size);
  }

  /* the button ,larger */
  --button-large {
    @apply --button-base;
    padding: calc(var(--button-large-size) * .6) calc(var(--button-large-size));
    font-size: var(--button-large-size);
  }

  /* the button, smaller */
  --button-small {
    @apply --button-base;
    padding: calc(var(--button-small-size) * .6) calc(var(--button-small-size) * .8) calc(var(--button-small-size) * .5);
    font-size: var(--button-small-size);
  }

  /* outline button */
  --button-outline {
    @apply --button-base;
    background: transparent;
    color: var(--base-gray);
    border: var(--button-outline-stroke) solid var(--base-gray);

    &:hover {
      background: inherit;
      border: var(--button-outline-stroke) solid var(--button-color);
      color: var(--button-color);
    }
  }

  /* disabled button */
  --button-disabled {
    @apply --button-base;
    cursor: not-allowed;
    background-color: color(var(--base-gray) tint(70%));
    border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));

    &:hover {
      background-color: color(var(--base-gray) tint(70%));
      border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));
    }
  }

  /* additive */
  --buttons {
    button,
    .btn {
      @apply --button;

      &.large {
        @apply --button-large;
      }

      &.small {
        @apply --button-small;
      }

      &.outline {
        @apply --button-outline;
      }

      &.disabled {
        @apply --button-disabled;
      }
    }
  }
}
/* ------ */
/* Forms */
/* ------ */

:root {

  /* Todo: Select (Q+A) */

  --input {
    @apply --transition;
    font-size: var(--base-font-size);
    font-weight: var(--base-font-weight);
    border: var(--input-stroke) solid var(--input-border-color);
    border-radius: var(--global-border-radius);
    height: var(--input-height);
    outline: none;
    padding: var(--input-padding);
    background: var(--input-bg-color);
    font-family: inherit;
    width: var(--input-width);
    max-width: var(--input-max-width);
    min-width: var(--input-min-width);
    color: var(--input-text-color);
    font-size: inherit;
    line-height: inherit;

    &:hover {
      border-color: var(--input-border-hover-color)
    }

    &:focus {
      box-shadow: inset 0 0 0 var(--input-focus-inset) var(--input-focus-color);
      border: 1px solid var(--input-focus-color);
      outline: none
    }
  }

  --input-warning {
    border-color: var(--color-warning);

    &:focus {
      border-color: color(var(--color-warning) a(50%));
      box-shadow: 0 0 .6rem color(var(--color-warning) a(50%))
    }
  }


  --autofill {
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -webkit-text-fill-color: var(--input-autofill-text-color)
    }

    &:-moz-autofill {
      -moz-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -moz-text-fill-color: var(--input-autofill-text-color)
    }

    &:-o-autofill {
      -o-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -o-text-fill-color: var(--input-autofill-text-color)
    }

    &:-khtml-autofill {
      -khtml-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -khtml-text-fill-color: var(--input-autofill-text-color)
    }
  }


  --textarea {
    @apply --input;
    @apply --autofill;
    color: inherit;
    font-size: inherit;
    line-height: inherit;
  }

  --label {
    display: var(--label-display);
    text-align: var(--label-align);
    min-width: var(--label-min-width)
  }

  --file-input {
    box-sizing: border-box;
    font-size: var(--base-font-size);
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    outline: 0;
    padding: .4rem;
    position: relative;
    width: 200px;
    color: var(--button-text-color);

    &:after {
      box-sizing: inherit;
      text-align: center;
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--button-color);
      content: 'Choose a file ...';
      padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    }
    &:hover:after, &:active:after {
      background-color: color(var(--button-color) shade(20%));
    }
  }

  --fieldset {
    border: var(--fieldset-border);
    border-radius: var(--global-border-radius)
  }

  /* select box */
  /* Must be applied to element wrapping <select> tag. */
  /* TODO: ie 10 + 11 support ? */

  /*todo: focus highlight*/
  --select-box {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    width: var(--input-width);
    min-width: var(--input-min-width);
    max-width: var(--input-max-width);
    border-radius: var(--global-border-radius);
    background-color: var(--input-select-bg-color);
    /*max-width: var(--input-max-width) */

    & select {
      width: 100%;
      margin: 0;
      outline: none;
      padding: var(--input-padding);
      font-size: var(--base-font-size); /*anything except 16px will create page zoom on ios */
      border: none;

      &:focus, &:active {
        border: none;
        box-shadow: none
      }

      & option {
        padding: .3rem .7rem
      }
    }

    &:after {
      content: '';
      position: absolute;
      top: calc(50% - (var(--input-select-arrow-size) / 2));
      right: .75em;
      z-index: 2;
      display: none;
      pointer-events: none
    }

    @supports ( -webkit-appearance: none ) or ( appearance: none ) or ( ( -moz-appearance: none ) and ( mask-type: alpha ) ) {
      border: var(--fieldset-border);

      &:after {
        display: block;
        border-left: var(--input-select-arrow-size) solid transparent;
        border-right: var(--input-select-arrow-size) solid transparent;
        border-top: var(--input-select-arrow-size) solid var(--input-select-arrow-color)
      }

      & select {
        border-radius: var(--global-border-radius);
        border: var(--input-stroke) solid color(var(--base-gray) tint(70%));
        padding-right: 2em;
        background: none;
        border: 0px solid transparent;
        appearance: none;
        color: inherit;
        font-size: inherit;
        line-height: inherit;
    	  text-transform: none;
        margin: 0;
      }

      &:hover {
        border-color: var(--input-border-hover-color)
      }

      &:focus {
        box-shadow: inset 0 0 0 1px var(--input-focus-color);
        border: 1px solid var(--input-focus-color);
        outline: none
      }
    }
  }


  /* Controls - pure css styling for Radio buttons and Checkboxes */

  --controls {
    input[type='radio'],
    input[type='checkbox'] {
      box-sizing: border-box;
      position: absolute;
      display: none;
    }

    input[type='radio'][disabled],
    input[type='checkbox'][disabled] {
      cursor: not-allowed;
    }

    input[type='radio'] + label,
    input[type='checkbox'] + label {
      box-sizing: border-box;
      position: relative;
      display: block;
      padding-left: calc(1.875 * var(--control-label-text-size));
      cursor: pointer;
      vertical-align: middle;
      font-size: var(--control-label-text-size);
      line-height: 1.3em;
      margin-bottom: calc(0.5 * var(--control-label-text-size));

      &:hover {
        &:before {
          border: 1px solid var(--input-control-active)
        }
      }

      &:before {
        box-sizing: border-box;
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: calc(1.25 * var(--control-label-text-size));
        height: calc(1.25 * var(--control-label-text-size));
        content: '';
        transition: border .2s ease;
        border: 1px solid var(--input-control-border);
        background: var(--input-control)
      }

      &:after {
        box-sizing: border-box;
        position: absolute;
        content: '';
        transition: all .2s ease
      }
    }

    input[type='radio'][disabled] + label,
    input[type='checkbox'][disabled] + label {
      cursor: not-allowed;
      color: var(--input-control-disabled);

      &:hover,
      &:before,
      &:after {
        cursor: not-allowed
      }
      &:before {
        border-color: var(--input-control-disabled)
      }
    }

    input[type='radio']:checked + label,
    input[type='checkbox']:checked + label {

      &:after {
        transform: scale(1);
      }
    }

    input[type='radio'] + label {
      &:before {
        border-radius: 50%;
      }

      &:after {
        top: calc(0.375 * var(--control-label-text-size));
        left: calc(0.375 * var(--control-label-text-size));
        width: calc(0.5 * var(--control-label-text-size));
        height: calc(0.5 * var(--control-label-text-size));
        border-radius: 50%;
        background: var(--input-control-active);
        transform: scale(0);
      }
    }

    input[type='radio']:checked + label {
      &:before {
        border: 1px solid var(--input-control-active);
      }
    }

    input[type='radio']:checked[disabled] + label {
      &:before {
        border: 1px solid var(--input-control-disabled-checked);
      }

      &:after {
        background: var(--input-control-disabled-checked);
      }
    }

    input[type='checkbox'] + label {
      &:before {
        border-radius: var(--global-border-radius);
      }

      &:after {
        top: calc(0.125 * var(--control-label-text-size));
        left: calc(0.4375 * var(--control-label-text-size));
        width: calc(0.375 * var(--control-label-text-size));
        height: calc(0.75 * var(--control-label-text-size));
        transform: scale(0) rotate(45deg);
        border-width: calc(0.125 * var(--control-label-text-size));
        border-style: solid;
        border-color: var(--input-control-checkmark);
        border-top: 0;
        border-left: 0;
      }
    }

    input[type='checkbox']:checked + label {
      &:before {
        border: var(--input-control-active);
        background: var(--input-control-active);
      }

      &:after {
        transform: scale(1) rotate(45deg)
      }
    }

    input[type='checkbox']:checked[disabled] + label {
      &:before {
        border: var(--input-control-disabled-checked);
        background: var(--input-control-disabled-checked);
      }
    }
  }


  /* Additive @apply: Forms */

  /* WARNING: Creates classes in your css and styles them - not to be used inside */
  /* an element. */

  /* Adds default form styling */

  --forms {
    input[type='email'],
    input[type='number'],
    input[type='password'],
    input[type='search'],
    input[type='tel'],
    input[type='text'],
    input[type='url'],
    input[type='color'],
    input[type='date'],
    input[type='datetime'],
    input[type='datetime-local'],
    input[type='month'],
    input[type='time'],
    input[type='week'] {
      @apply --input;
      @apply --autofill;
    }

    textarea {
      @apply --textarea;
    }

    /*overwrites for color */
    input[type='color'] {
      padding: .2rem;
      width: 2.5rem;
      max-width: 2.5rem;
      min-width: 2.5rem;
      height: 1.5em;
    }

    input[type='reset'] {
      @apply --button;
      @apply --button-outline;
    }

    input[type='button'],
    input[type='submit'] {
      @apply --button;
    }

    input[type='file'] {
      @apply --file-input;
    }

    select {
      @apply --input
    }

    /* Radio buttons and Checkboxes */
    @apply --controls;




    label {
      @apply --label;
    }

    fieldset {
      @apply --fieldset;
    }

    .select-box {
      @apply --select-box;
    }
  }
}
/* ------ */
/* Tables */
/* ------ */

:root {

  /* Basic Table */
  --table-basic {
    border-collapse: collapse;
    border-spacing: 0;
    max-width: 100%;
    width: 100%;
    border-radius: 0;
    margin: 1.5rem 0 3em; /* ? */
    position: relative;
    text-align: left;

    & th, & td {
      border: var(--default-border);
      padding: .5em 1em;
    }
  }

  /* Minimal Table */
  --table-minimal {
    text-align: left;
    border-collapse: collapse;
    border-spacing: 0;
    margin: 1.5rem 0 3em;  /* ? */
    max-width: 100%;
    width: 100%;
    border-radius: 0;

    & td, & th {
      line-height: var(--line-height);
      padding: .5em 1em;
    }

    & td {
      border-top: var(--default-border);
    }
  }

  /* Table utility: Zebra Stripes */
  --zebra-stripes {
    & tr:nth-child(odd) td {
      background: rgba(0,0,0,.03);
    }
  }

  /* Table utility: HOver rows */
  --hover-rows {
    & tr {
      @apply --transition;

      &:hover {
        background: rgba(0,0,0,.08);
      }
    }
  }

  /* Addtive mixin: Tables */
  --tables {
    table {
      @apply --table-basic
    }
  }
}
:root {
  /* Defaults */
  --global-border-radius: 2px;
  --default-border: 1px solid color(var(--base-gray) tint(70%));
  --default-easing: cubic-bezier(0.250,  0.460, 0.450, 0.940);
  --default-transition-duration: .3s;

  /*default breakpoint for responsive-overflow. For a more robust breakpoint library see xxx.*/
  @custom-media --axis-breakpoint (width < 768px);

  /* Colors */
  --base-gray: #767d84;
  --color-primary: #0074D9;
  --color-accent: #c25;
  --color-warning: #d83030;
  --selection-highlight: color(var(--color-primary) a(15%));

  /* Typography */
  --base-font-size: 16px;
  --base-font-weight: normal;
  --font-stack: var(--sans);
  --font-color: color(var(--base-gray) shade(35%));
  --line-height: 1.5;
  --paragraph-line-height: var(--line-height);
  --paragraph-margin: .75rem;
  --heading-size-multiplier: 1;  /* Change this to scale all headers at once */
  --heading-line-height: 1.3;
  --heading-font-weight: bolder;
  --heading-display: block;
  --heading-margin: var(--paragraph-margin);

  /* Font Stacks */
  --sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  --helvetica: 'Helvetica Neue', HelveticaNeue, Helvetica, Arial, sans-serif;
  --serif: Georgia, Cambria, 'Times New Roman', Times, serif;
  --monospace: Monaco, Menlo, Consolas, 'Courier New', monospace;

  /* Buttons */
  --button-med-size: .9rem;
  --button-large-size: 1.3rem;
  --button-small-size: .75rem;
  --button-outline-stroke: 1px;
  --button-color: var(--color-primary);
  --button-text-color: #fff;

  /* Layout */
  --hr-color: color(var(--base-gray) a(30%));
  --hr-size: 1px;

  /* Forms */
  --input-width: auto;
  --input-max-width: 25rem;
  --input-min-width: auto;
  --input-border-color: color(var(--base-gray) tint(70%));
  --input-border-hover-color: color(var(--input-border-color) shade(20%));
  --input-bg-color: transparent;
  --input-text-color: inherit;
  --input-height: auto;
  --input-padding: .4em .65em;
  --input-stroke: 1px;
  --input-focus-inset: 1px;
  --input-focus-color: var(--color-primary);
  --input-autofill-bg-color: var(--base-gray);
  --input-autofill-text-color: white;
  /*todo: textarea settings*/

  --label-display: inline-block;
  --label-align: left;
  --label-min-width: 350px;
  /*Need label width and max width?*/

  --fieldset-border: var(--default-border);

  /*select box*/
  --input-select-max-width: var(--input-max-width);
  --input-select-arrow-color: color(var(--base-gray) tint(50%));
  --input-select-arrow-size: .4em;
  --input-select-bg-color: var(--input-bg-color);

  /* Radio buttons and checkboxes */
  --control-label-text-size: var(--base-font-size);
  --input-control: transparent;
  --input-control-active: var(--color-primary);
  --input-control-border: color(var(--base-gray) tint(70%));
  --input-control-disabled: color(var(--base-gray) tint(70%));
  --input-control-disabled-checked: color(var(--input-control-active) tint(40%));
  --input-control-checkmark: #fff;
}
/* ----- */
/* Reset */
/* ----- */

:root {
  /* Mixin: Border Box HTML */
  /* Add border box to every element in your project. Used in your project root. Included in sanitize, below.. */
  /* http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */

  --border-box-html {
    html {
      box-sizing: border-box;
    }

    *,
    *:before,
    *:after {
      box-sizing: inherit;
    }
  }
}
/* ----------- */
/* Interaction */
/* ----------- */

:root {
  /* transition preset */
  --transition {
    transition: all var(--default-transition-duration) var(--default-easing)
  }

  /* hover underline */
  --hover-underline {
    border-bottom: 1px solid transparent;

    &:hover {
      border-bottom: 1px solid currentColor
    }
  }

  /* hover pop */
  --hover-pop {
    &:hover {
      transform: scale(1.1)
    }
  }

  --click-down {
    transition-duration: .2s;

    &:active {
      transform: translateY(2px)
    }
  }

  --click-inset {
    &:active {
      box-shadow: inset 0px .5rem 1rem rgba(0, 0, 0, 0.35);
    }
  }

  --click-shrink {
    &:active {
      transform: scale(.95)
    }
  }
}
/* ---------- */
/* Typography */
/* ---------- */

:root {

  /* paragraph preset */
  --p {
    margin: var(--paragraph-margin) 0¡¡;
    line-height: var(--paragraph-line-height);
    font-size: var(--base-font-size);
  }

  /* "small" text preset */
  --small {
    font-size: 70%;
    opacity: .7;
    font-weight: var(--base-font-weight);
  }

  /* heading base - used across all headings below */
  --heading-base {
    display: var(--heading-display);
    font-weight: var(--heading-font-weight)
  }

  /* heading sizes, used in headings below */
  --h1-size: calc(2.4rem * var(--heading-size-multiplier));
  --h2-size: calc(1.8rem * var(--heading-size-multiplier));
  --h3-size: calc(1.5rem * var(--heading-size-multiplier));
  --h4-size: calc(1.3rem * var(--heading-size-multiplier));
  --h5-size: calc(1.0rem * var(--heading-size-multiplier));
  --h6-size: calc(0.9rem * var(--heading-size-multiplier));

  /* h1 preset */
  --h1 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h1-size);
    line-height: var(--heading-line-height);
  }

  /* h2 preset */
  --h2 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h2-size);
    line-height: var(--heading-line-height);
  }

  /* h3 preset */
  --h3 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h3-size);
    line-height: var(--heading-line-height);
  }

  /* h4 preset */
  --h4 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h4-size);
    line-height: var(--heading-line-height);
  }

  /* h5 preset */
  --h5 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h5-size);
    line-height: var(--heading-line-height);
  }


  /* h6 preset */
  --h6 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h6-size);
    line-height: var(--heading-line-height);
    text-transform: uppercase;
  }


  /* blockquote preset */
  --blockquote {
    line-height: var(--heading-line-height);
    border-left: .4rem solid var(--color-primary);
    margin: 1em 0;
    padding-left: 1.5em;

    & > p {
      font-weight: var(--base-font-weight);
      font-size: 1.27rem;
      line-height: 127%;
      line-height: inherit;
      margin-top: 0;
    }

    & > cite,
    & > footer,
    & > figcaption {
      color: color(var(--base-gray) lightness(55%));

      &:before {
        content: '\2014';
      }
    }
  }

  /* Ellipsis - Truncate text to the width of its container.. */
  --ellipsis {
    white-space: nowrap;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: normal;
  }

  /* Custom color for user-selected text */
  --text-selection {
    &::selection {
      background: var(--selection-highlight);
    }
  }


  /* Default styling for links */
  --link {
    color: var(--color-primary);
    text-decoration: none;
    @apply --transition;
  }

  /* Reset default link styling */
  --reset-link {
    border: none;
    text-decoration: none;
    color: initial;

    &:hover {
      border: none;
      text-decoration: none;
      color: initial;
    }
  }

  /* ul preset */
  --ul {
    margin: 0.32rem 0.94rem;
    padding-left: 1rem;

    & li {
      list-style-type: disc;
      padding: 0.125rem;
    }
  }

  /* ol preset */
  --ol {
    margin: 0.32rem 1.125rem;
    padding-left: 1rem;

    & li {
      list-style-type: decimal;
      padding: 0.125rem;
    }
  }

  /* inline list */
  --inline-list {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    & li {
      list-style-type: none;
    }

    & li:not(:last-child) {
      margin-right: 1.5rem;
    }
  }

  /* reset list */
  --reset-list {
    display: initial;
    margin: 0;
    padding: 0;

    & li {
      list-style-type: none;
      padding: 0;
      margin: 0
    }
  }


  /* Additive */

  --base {
    html {
      font-size: var(--base-font-size);
      line-height: var(--line-height);
      -ms-text-size-adjust: 100%;
    	-webkit-text-size-adjust: 100%; 
    }

    body {
      font-family: var(--font-stack);
      font-size: var(--base-font-size);
      color: color(var(--font-color));
      font-weight: var(--base-font-weight);
    }
  }

  --headers {
    h1 {
      @apply --h1;
    }

    h2 {
      @apply --h2;
    }

    h3 {
      @apply --h3;
    }

    h4 {
      @apply --h4;
    }

    h5 {
      @apply --h5;
    }

    h6 {
      @apply --h6;
    }
  }

  --lists {
    ul {
      @apply ul;
    }

    li {
      @apply li;
    }
  }

  --typography {
    @apply --base;
    @apply --headers;
    @apply --lists;
    @apply --text-selection;

    p {
      @apply --p;
    }

    a {
      @apply --link;
    }

    blockquote {
      @apply --blockquote;
    }
  }
}
/* ----------- */
/* Code Blocks */
/* ----------- */

:root {
  /* Inline code block preset */
  --code {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(85%));
    border-radius: var(--global-border-radius);
    color: var(--color-accent);
    font-family: var(--monospace);
    font-size: .72rem;
    padding: .08rem .3rem;
    white-space: normal;
  }

  /* Preformatted text preset */
  --pre {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(80%));
    border-radius: var(--global-border-radius);
    display: block;
    font-family: var(--monospace);
    font-size: inherit;
    line-height: inherit;
    margin: 0 0 1rem;
    padding: .5rem .8rem;
    white-space: pre-wrap;
  }

  --pre-dark {
    background-color: color(var(--base-gray) lightness(20%));
    color: color(var(--base-gray) lightness(75%));
    border: 1px solid color(var(--base-gray) lightness(14%));
  }

  /*todo: add --pre-dark*/


  /* Additive Apply: Code blocks */
  --code-blocks {
    code {
      @apply --code;
    }

    pre {
      @apply --pre;
    }
  }
}
/* --------- */
/* Utilities */
/* --------- */

:root {

  /* Make wide elements scroll horizontally at a set breakpoint, with a nice
  visual cue (shadow) - mostly useful for responsive tables. Note: must be set
  on containing element. */
  --responsive-overflow {
    position: relative;

    @media (--axis-breakpoint) {
      & > * {
        overflow-x: auto;
        display: block;
      }

      &:after {
        content: '';
        width: 1rem;
        height: 100%;
        background: linear-gradient(90deg, rgba(0,0,0,0), rgba(0,0,0,.15));
        position: absolute;
        right: 0;
        top: 0;
      }
    }
  }


  /* Debug - needs comment */

  --debug {
    border: 1px solid MediumPurple;

    & > * {
      border: 1px solid DarkKhaki;
    }

    & > * > * {
      border: 1px solid MediumTurquoise;
    }

    & > * > * > * {
      border: 1px solid LightSlateGray;
    }

    & > * > * > * > * {
      border: 1px solid LightBlue;
    }

    & > * > * > * > * > * {
      border: 1px solid MediumSlateBlue;
    }

    & > * > * > * > * > * > * {
      border: 1px solid DeepSkyBlue;
    }

    & > * > * > * > * > * > * > * {
      border: 1px solid DarkSeaGreen;
    }

    & img {
      border: 1px solid #f00;
      filter: hue-rotate(330deg) contrast(.75) saturate(6);
    }

    & img[alt] {
      border: 1px solid LimeGreen;
      filter: none
    }

    & img[alt=""] {
      border: 1px solid gold;
      filter: contrast(1) saturate(2)
    }

    & a {
      background: rgba(#f00, .1);
      border: 1px solid #f00;
    }

    & a[title] {
      background: none;
      border-color: LimeGreen;
    }

    & style {
      border: block;
    }

    & [style], style, [class=""], [id=""], a[href="#"] {
      background: rgba(yellow, .2);
      border: 1px solid gold;
    }
  }
}
/* ------ */
/* Layout */
/* ------ */

:root {
  /* hr - horizontal rule preset */
  --hr {
    border: 0;
    border-bottom: var(--hr-size) solid var(--hr-color);
    height: 0;
    padding: 0;
    margin: 1.5rem 0
  }

  --layout {
    hr {
      @apply --hr
    }
  }
}
/* ------ */
/* Button */
/* ------ */

:root {
  /* base styling needed for --button */
  --button-base {
    @apply --transition;
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    background-color: var(--button-color);
    color: var(--button-text-color);
    user-select: none;


    &:hover, &:active {
      border: var(--button-outline-stroke) solid color(var(--button-color) shade(20%));
      background-color: color(var(--button-color) shade(20%));
    }
  }

  /* the button */
  --button {
    @apply --button-base;
    padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    font-size: var(--button-med-size);
  }

  /* the button ,larger */
  --button-large {
    @apply --button-base;
    padding: calc(var(--button-large-size) * .6) calc(var(--button-large-size));
    font-size: var(--button-large-size);
  }

  /* the button, smaller */
  --button-small {
    @apply --button-base;
    padding: calc(var(--button-small-size) * .6) calc(var(--button-small-size) * .8) calc(var(--button-small-size) * .5);
    font-size: var(--button-small-size);
  }

  /* outline button */
  --button-outline {
    @apply --button-base;
    background: transparent;
    color: var(--base-gray);
    border: var(--button-outline-stroke) solid var(--base-gray);

    &:hover {
      background: inherit;
      border: var(--button-outline-stroke) solid var(--button-color);
      color: var(--button-color);
    }
  }

  /* disabled button */
  --button-disabled {
    @apply --button-base;
    cursor: not-allowed;
    background-color: color(var(--base-gray) tint(70%));
    border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));

    &:hover {
      background-color: color(var(--base-gray) tint(70%));
      border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));
    }
  }

  /* additive */
  --buttons {
    button,
    .btn {
      @apply --button;

      &.large {
        @apply --button-large;
      }

      &.small {
        @apply --button-small;
      }

      &.outline {
        @apply --button-outline;
      }

      &.disabled {
        @apply --button-disabled;
      }
    }
  }
}
/* ------ */
/* Forms */
/* ------ */

:root {

  /* Todo: Select (Q+A) */

  --input {
    @apply --transition;
    font-size: var(--base-font-size);
    font-weight: var(--base-font-weight);
    border: var(--input-stroke) solid var(--input-border-color);
    border-radius: var(--global-border-radius);
    height: var(--input-height);
    outline: none;
    padding: var(--input-padding);
    background: var(--input-bg-color);
    font-family: inherit;
    width: var(--input-width);
    max-width: var(--input-max-width);
    min-width: var(--input-min-width);
    color: var(--input-text-color);
    font-size: inherit;
    line-height: inherit;

    &:hover {
      border-color: var(--input-border-hover-color)
    }

    &:focus {
      box-shadow: inset 0 0 0 var(--input-focus-inset) var(--input-focus-color);
      border: 1px solid var(--input-focus-color);
      outline: none
    }
  }

  --input-warning {
    border-color: var(--color-warning);

    &:focus {
      border-color: color(var(--color-warning) a(50%));
      box-shadow: 0 0 .6rem color(var(--color-warning) a(50%))
    }
  }


  --autofill {
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -webkit-text-fill-color: var(--input-autofill-text-color)
    }

    &:-moz-autofill {
      -moz-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -moz-text-fill-color: var(--input-autofill-text-color)
    }

    &:-o-autofill {
      -o-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -o-text-fill-color: var(--input-autofill-text-color)
    }

    &:-khtml-autofill {
      -khtml-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -khtml-text-fill-color: var(--input-autofill-text-color)
    }
  }


  --textarea {
    @apply --input;
    @apply --autofill;
    color: inherit;
    font-size: inherit;
    line-height: inherit;
  }

  --label {
    display: var(--label-display);
    text-align: var(--label-align);
    min-width: var(--label-min-width)
  }

  --file-input {
    box-sizing: border-box;
    font-size: var(--base-font-size);
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    outline: 0;
    padding: .4rem;
    position: relative;
    width: 200px;
    color: var(--button-text-color);

    &:after {
      box-sizing: inherit;
      text-align: center;
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--button-color);
      content: 'Choose a file ...';
      padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    }
    &:hover:after, &:active:after {
      background-color: color(var(--button-color) shade(20%));
    }
  }

  --fieldset {
    border: var(--fieldset-border);
    border-radius: var(--global-border-radius)
  }

  /* select box */
  /* Must be applied to element wrapping <select> tag. */
  /* TODO: ie 10 + 11 support ? */

  /*todo: focus highlight*/
  --select-box {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    width: var(--input-width);
    min-width: var(--input-min-width);
    max-width: var(--input-max-width);
    border-radius: var(--global-border-radius);
    background-color: var(--input-select-bg-color);
    /*max-width: var(--input-max-width) */

    & select {
      width: 100%;
      margin: 0;
      outline: none;
      padding: var(--input-padding);
      font-size: var(--base-font-size); /*anything except 16px will create page zoom on ios */
      border: none;

      &:focus, &:active {
        border: none;
        box-shadow: none
      }

      & option {
        padding: .3rem .7rem
      }
    }

    &:after {
      content: '';
      position: absolute;
      top: calc(50% - (var(--input-select-arrow-size) / 2));
      right: .75em;
      z-index: 2;
      display: none;
      pointer-events: none
    }

    @supports ( -webkit-appearance: none ) or ( appearance: none ) or ( ( -moz-appearance: none ) and ( mask-type: alpha ) ) {
      border: var(--fieldset-border);

      &:after {
        display: block;
        border-left: var(--input-select-arrow-size) solid transparent;
        border-right: var(--input-select-arrow-size) solid transparent;
        border-top: var(--input-select-arrow-size) solid var(--input-select-arrow-color)
      }

      & select {
        border-radius: var(--global-border-radius);
        border: var(--input-stroke) solid color(var(--base-gray) tint(70%));
        padding-right: 2em;
        background: none;
        border: 0px solid transparent;
        appearance: none;
        color: inherit;
        font-size: inherit;
        line-height: inherit;
    	  text-transform: none;
        margin: 0;
      }

      &:hover {
        border-color: var(--input-border-hover-color)
      }

      &:focus {
        box-shadow: inset 0 0 0 1px var(--input-focus-color);
        border: 1px solid var(--input-focus-color);
        outline: none
      }
    }
  }


  /* Controls - pure css styling for Radio buttons and Checkboxes */

  --controls {
    input[type='radio'],
    input[type='checkbox'] {
      box-sizing: border-box;
      position: absolute;
      display: none;
    }

    input[type='radio'][disabled],
    input[type='checkbox'][disabled] {
      cursor: not-allowed;
    }

    input[type='radio'] + label,
    input[type='checkbox'] + label {
      box-sizing: border-box;
      position: relative;
      display: block;
      padding-left: calc(1.875 * var(--control-label-text-size));
      cursor: pointer;
      vertical-align: middle;
      font-size: var(--control-label-text-size);
      line-height: 1.3em;
      margin-bottom: calc(0.5 * var(--control-label-text-size));

      &:hover {
        &:before {
          border: 1px solid var(--input-control-active)
        }
      }

      &:before {
        box-sizing: border-box;
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: calc(1.25 * var(--control-label-text-size));
        height: calc(1.25 * var(--control-label-text-size));
        content: '';
        transition: border .2s ease;
        border: 1px solid var(--input-control-border);
        background: var(--input-control)
      }

      &:after {
        box-sizing: border-box;
        position: absolute;
        content: '';
        transition: all .2s ease
      }
    }

    input[type='radio'][disabled] + label,
    input[type='checkbox'][disabled] + label {
      cursor: not-allowed;
      color: var(--input-control-disabled);

      &:hover,
      &:before,
      &:after {
        cursor: not-allowed
      }
      &:before {
        border-color: var(--input-control-disabled)
      }
    }

    input[type='radio']:checked + label,
    input[type='checkbox']:checked + label {

      &:after {
        transform: scale(1);
      }
    }

    input[type='radio'] + label {
      &:before {
        border-radius: 50%;
      }

      &:after {
        top: calc(0.375 * var(--control-label-text-size));
        left: calc(0.375 * var(--control-label-text-size));
        width: calc(0.5 * var(--control-label-text-size));
        height: calc(0.5 * var(--control-label-text-size));
        border-radius: 50%;
        background: var(--input-control-active);
        transform: scale(0);
      }
    }

    input[type='radio']:checked + label {
      &:before {
        border: 1px solid var(--input-control-active);
      }
    }

    input[type='radio']:checked[disabled] + label {
      &:before {
        border: 1px solid var(--input-control-disabled-checked);
      }

      &:after {
        background: var(--input-control-disabled-checked);
      }
    }

    input[type='checkbox'] + label {
      &:before {
        border-radius: var(--global-border-radius);
      }

      &:after {
        top: calc(0.125 * var(--control-label-text-size));
        left: calc(0.4375 * var(--control-label-text-size));
        width: calc(0.375 * var(--control-label-text-size));
        height: calc(0.75 * var(--control-label-text-size));
        transform: scale(0) rotate(45deg);
        border-width: calc(0.125 * var(--control-label-text-size));
        border-style: solid;
        border-color: var(--input-control-checkmark);
        border-top: 0;
        border-left: 0;
      }
    }

    input[type='checkbox']:checked + label {
      &:before {
        border: var(--input-control-active);
        background: var(--input-control-active);
      }

      &:after {
        transform: scale(1) rotate(45deg)
      }
    }

    input[type='checkbox']:checked[disabled] + label {
      &:before {
        border: var(--input-control-disabled-checked);
        background: var(--input-control-disabled-checked);
      }
    }
  }


  /* Additive @apply: Forms */

  /* WARNING: Creates classes in your css and styles them - not to be used inside */
  /* an element. */

  /* Adds default form styling */

  --forms {
    input[type='email'],
    input[type='number'],
    input[type='password'],
    input[type='search'],
    input[type='tel'],
    input[type='text'],
    input[type='url'],
    input[type='color'],
    input[type='date'],
    input[type='datetime'],
    input[type='datetime-local'],
    input[type='month'],
    input[type='time'],
    input[type='week'] {
      @apply --input;
      @apply --autofill;
    }

    textarea {
      @apply --textarea;
    }

    /*overwrites for color */
    input[type='color'] {
      padding: .2rem;
      width: 2.5rem;
      max-width: 2.5rem;
      min-width: 2.5rem;
      height: 1.5em;
    }

    input[type='reset'] {
      @apply --button;
      @apply --button-outline;
    }

    input[type='button'],
    input[type='submit'] {
      @apply --button;
    }

    input[type='file'] {
      @apply --file-input;
    }

    select {
      @apply --input
    }

    /* Radio buttons and Checkboxes */
    @apply --controls;




    label {
      @apply --label;
    }

    fieldset {
      @apply --fieldset;
    }

    .select-box {
      @apply --select-box;
    }
  }
}
/* ------ */
/* Tables */
/* ------ */

:root {

  /* Basic Table */
  --table-basic {
    border-collapse: collapse;
    border-spacing: 0;
    max-width: 100%;
    width: 100%;
    border-radius: 0;
    margin: 1.5rem 0 3em; /* ? */
    position: relative;
    text-align: left;

    & th, & td {
      border: var(--default-border);
      padding: .5em 1em;
    }
  }

  /* Minimal Table */
  --table-minimal {
    text-align: left;
    border-collapse: collapse;
    border-spacing: 0;
    margin: 1.5rem 0 3em;  /* ? */
    max-width: 100%;
    width: 100%;
    border-radius: 0;

    & td, & th {
      line-height: var(--line-height);
      padding: .5em 1em;
    }

    & td {
      border-top: var(--default-border);
    }
  }

  /* Table utility: Zebra Stripes */
  --zebra-stripes {
    & tr:nth-child(odd) td {
      background: rgba(0,0,0,.03);
    }
  }

  /* Table utility: HOver rows */
  --hover-rows {
    & tr {
      @apply --transition;

      &:hover {
        background: rgba(0,0,0,.08);
      }
    }
  }

  /* Addtive mixin: Tables */
  --tables {
    table {
      @apply --table-basic
    }
  }
}
:root {
  /* Defaults */
  --global-border-radius: 2px;
  --default-border: 1px solid color(var(--base-gray) tint(70%));
  --default-easing: cubic-bezier(0.250,  0.460, 0.450, 0.940);
  --default-transition-duration: .3s;

  /*default breakpoint for responsive-overflow. For a more robust breakpoint library see xxx.*/
  @custom-media --axis-breakpoint (width < 768px);

  /* Colors */
  --base-gray: #767d84;
  --color-primary: #0074D9;
  --color-accent: #c25;
  --color-warning: #d83030;
  --selection-highlight: color(var(--color-primary) a(15%));

  /* Typography */
  --base-font-size: 16px;
  --base-font-weight: normal;
  --font-stack: var(--sans);
  --font-color: color(var(--base-gray) shade(35%));
  --line-height: 1.5;
  --paragraph-line-height: var(--line-height);
  --paragraph-margin: .75rem;
  --heading-size-multiplier: 1;  /* Change this to scale all headers at once */
  --heading-line-height: 1.3;
  --heading-font-weight: bolder;
  --heading-display: block;
  --heading-margin: var(--paragraph-margin);

  /* Font Stacks */
  --sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  --helvetica: 'Helvetica Neue', HelveticaNeue, Helvetica, Arial, sans-serif;
  --serif: Georgia, Cambria, 'Times New Roman', Times, serif;
  --monospace: Monaco, Menlo, Consolas, 'Courier New', monospace;

  /* Buttons */
  --button-med-size: .9rem;
  --button-large-size: 1.3rem;
  --button-small-size: .75rem;
  --button-outline-stroke: 1px;
  --button-color: var(--color-primary);
  --button-text-color: #fff;

  /* Layout */
  --hr-color: color(var(--base-gray) a(30%));
  --hr-size: 1px;

  /* Forms */
  --input-width: auto;
  --input-max-width: 25rem;
  --input-min-width: auto;
  --input-border-color: color(var(--base-gray) tint(70%));
  --input-border-hover-color: color(var(--input-border-color) shade(20%));
  --input-bg-color: transparent;
  --input-text-color: inherit;
  --input-height: auto;
  --input-padding: .4em .65em;
  --input-stroke: 1px;
  --input-focus-inset: 1px;
  --input-focus-color: var(--color-primary);
  --input-autofill-bg-color: var(--base-gray);
  --input-autofill-text-color: white;
  /*todo: textarea settings*/

  --label-display: inline-block;
  --label-align: left;
  --label-min-width: 350px;
  /*Need label width and max width?*/

  --fieldset-border: var(--default-border);

  /*select box*/
  --input-select-max-width: var(--input-max-width);
  --input-select-arrow-color: color(var(--base-gray) tint(50%));
  --input-select-arrow-size: .4em;
  --input-select-bg-color: var(--input-bg-color);

  /* Radio buttons and checkboxes */
  --control-label-text-size: var(--base-font-size);
  --input-control: transparent;
  --input-control-active: var(--color-primary);
  --input-control-border: color(var(--base-gray) tint(70%));
  --input-control-disabled: color(var(--base-gray) tint(70%));
  --input-control-disabled-checked: color(var(--input-control-active) tint(40%));
  --input-control-checkmark: #fff;
}
/* ----- */
/* Reset */
/* ----- */

:root {
  /* Mixin: Border Box HTML */
  /* Add border box to every element in your project. Used in your project root. Included in sanitize, below.. */
  /* http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */

  --border-box-html {
    html {
      box-sizing: border-box;
    }

    *,
    *:before,
    *:after {
      box-sizing: inherit;
    }
  }
}
/* ----------- */
/* Interaction */
/* ----------- */

:root {
  /* transition preset */
  --transition {
    transition: all var(--default-transition-duration) var(--default-easing)
  }

  /* hover underline */
  --hover-underline {
    border-bottom: 1px solid transparent;

    &:hover {
      border-bottom: 1px solid currentColor
    }
  }

  /* hover pop */
  --hover-pop {
    &:hover {
      transform: scale(1.1)
    }
  }

  --click-down {
    transition-duration: .2s;

    &:active {
      transform: translateY(2px)
    }
  }

  --click-inset {
    &:active {
      box-shadow: inset 0px .5rem 1rem rgba(0, 0, 0, 0.35);
    }
  }

  --click-shrink {
    &:active {
      transform: scale(.95)
    }
  }
}
/* ---------- */
/* Typography */
/* ---------- */

:root {

  /* paragraph preset */
  --p {
    margin: var(--paragraph-margin) 0¡¡;
    line-height: var(--paragraph-line-height);
    font-size: var(--base-font-size);
  }

  /* "small" text preset */
  --small {
    font-size: 70%;
    opacity: .7;
    font-weight: var(--base-font-weight);
  }

  /* heading base - used across all headings below */
  --heading-base {
    display: var(--heading-display);
    font-weight: var(--heading-font-weight)
  }

  /* heading sizes, used in headings below */
  --h1-size: calc(2.4rem * var(--heading-size-multiplier));
  --h2-size: calc(1.8rem * var(--heading-size-multiplier));
  --h3-size: calc(1.5rem * var(--heading-size-multiplier));
  --h4-size: calc(1.3rem * var(--heading-size-multiplier));
  --h5-size: calc(1.0rem * var(--heading-size-multiplier));
  --h6-size: calc(0.9rem * var(--heading-size-multiplier));

  /* h1 preset */
  --h1 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h1-size);
    line-height: var(--heading-line-height);
  }

  /* h2 preset */
  --h2 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h2-size);
    line-height: var(--heading-line-height);
  }

  /* h3 preset */
  --h3 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h3-size);
    line-height: var(--heading-line-height);
  }

  /* h4 preset */
  --h4 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h4-size);
    line-height: var(--heading-line-height);
  }

  /* h5 preset */
  --h5 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h5-size);
    line-height: var(--heading-line-height);
  }


  /* h6 preset */
  --h6 {
    @apply --heading-base;
    margin: var(--heading-margin) 0;
    font-size: var(--h6-size);
    line-height: var(--heading-line-height);
    text-transform: uppercase;
  }


  /* blockquote preset */
  --blockquote {
    line-height: var(--heading-line-height);
    border-left: .4rem solid var(--color-primary);
    margin: 1em 0;
    padding-left: 1.5em;

    & > p {
      font-weight: var(--base-font-weight);
      font-size: 1.27rem;
      line-height: 127%;
      line-height: inherit;
      margin-top: 0;
    }

    & > cite,
    & > footer,
    & > figcaption {
      color: color(var(--base-gray) lightness(55%));

      &:before {
        content: '\2014';
      }
    }
  }

  /* Ellipsis - Truncate text to the width of its container.. */
  --ellipsis {
    white-space: nowrap;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: normal;
  }

  /* Custom color for user-selected text */
  --text-selection {
    &::selection {
      background: var(--selection-highlight);
    }
  }


  /* Default styling for links */
  --link {
    color: var(--color-primary);
    text-decoration: none;
    @apply --transition;
  }

  /* Reset default link styling */
  --reset-link {
    border: none;
    text-decoration: none;
    color: initial;

    &:hover {
      border: none;
      text-decoration: none;
      color: initial;
    }
  }

  /* ul preset */
  --ul {
    margin: 0.32rem 0.94rem;
    padding-left: 1rem;

    & li {
      list-style-type: disc;
      padding: 0.125rem;
    }
  }

  /* ol preset */
  --ol {
    margin: 0.32rem 1.125rem;
    padding-left: 1rem;

    & li {
      list-style-type: decimal;
      padding: 0.125rem;
    }
  }

  /* inline list */
  --inline-list {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    & li {
      list-style-type: none;
    }

    & li:not(:last-child) {
      margin-right: 1.5rem;
    }
  }

  /* reset list */
  --reset-list {
    display: initial;
    margin: 0;
    padding: 0;

    & li {
      list-style-type: none;
      padding: 0;
      margin: 0
    }
  }


  /* Additive */

  --base {
    html {
      font-size: var(--base-font-size);
      line-height: var(--line-height);
      -ms-text-size-adjust: 100%;
    	-webkit-text-size-adjust: 100%; 
    }

    body {
      font-family: var(--font-stack);
      font-size: var(--base-font-size);
      color: color(var(--font-color));
      font-weight: var(--base-font-weight);
    }
  }

  --headers {
    h1 {
      @apply --h1;
    }

    h2 {
      @apply --h2;
    }

    h3 {
      @apply --h3;
    }

    h4 {
      @apply --h4;
    }

    h5 {
      @apply --h5;
    }

    h6 {
      @apply --h6;
    }
  }

  --lists {
    ul {
      @apply ul;
    }

    li {
      @apply li;
    }
  }

  --typography {
    @apply --base;
    @apply --headers;
    @apply --lists;
    @apply --text-selection;

    p {
      @apply --p;
    }

    a {
      @apply --link;
    }

    blockquote {
      @apply --blockquote;
    }
  }
}
/* ----------- */
/* Code Blocks */
/* ----------- */

:root {
  /* Inline code block preset */
  --code {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(85%));
    border-radius: var(--global-border-radius);
    color: var(--color-accent);
    font-family: var(--monospace);
    font-size: .72rem;
    padding: .08rem .3rem;
    white-space: normal;
  }

  /* Preformatted text preset */
  --pre {
    background-color: color(var(--base-gray) lightness(96%));
    border: 1px solid color(var(--base-gray) lightness(80%));
    border-radius: var(--global-border-radius);
    display: block;
    font-family: var(--monospace);
    font-size: inherit;
    line-height: inherit;
    margin: 0 0 1rem;
    padding: .5rem .8rem;
    white-space: pre-wrap;
  }

  --pre-dark {
    background-color: color(var(--base-gray) lightness(20%));
    color: color(var(--base-gray) lightness(75%));
    border: 1px solid color(var(--base-gray) lightness(14%));
  }

  /*todo: add --pre-dark*/


  /* Additive Apply: Code blocks */
  --code-blocks {
    code {
      @apply --code;
    }

    pre {
      @apply --pre;
    }
  }
}
/* --------- */
/* Utilities */
/* --------- */

:root {

  /* Make wide elements scroll horizontally at a set breakpoint, with a nice
  visual cue (shadow) - mostly useful for responsive tables. Note: must be set
  on containing element. */
  --responsive-overflow {
    position: relative;

    @media (--axis-breakpoint) {
      & > * {
        overflow-x: auto;
        display: block;
      }

      &:after {
        content: '';
        width: 1rem;
        height: 100%;
        background: linear-gradient(90deg, rgba(0,0,0,0), rgba(0,0,0,.15));
        position: absolute;
        right: 0;
        top: 0;
      }
    }
  }


  /* Debug - needs comment */

  --debug {
    border: 1px solid MediumPurple;

    & > * {
      border: 1px solid DarkKhaki;
    }

    & > * > * {
      border: 1px solid MediumTurquoise;
    }

    & > * > * > * {
      border: 1px solid LightSlateGray;
    }

    & > * > * > * > * {
      border: 1px solid LightBlue;
    }

    & > * > * > * > * > * {
      border: 1px solid MediumSlateBlue;
    }

    & > * > * > * > * > * > * {
      border: 1px solid DeepSkyBlue;
    }

    & > * > * > * > * > * > * > * {
      border: 1px solid DarkSeaGreen;
    }

    & img {
      border: 1px solid #f00;
      filter: hue-rotate(330deg) contrast(.75) saturate(6);
    }

    & img[alt] {
      border: 1px solid LimeGreen;
      filter: none
    }

    & img[alt=""] {
      border: 1px solid gold;
      filter: contrast(1) saturate(2)
    }

    & a {
      background: rgba(#f00, .1);
      border: 1px solid #f00;
    }

    & a[title] {
      background: none;
      border-color: LimeGreen;
    }

    & style {
      border: block;
    }

    & [style], style, [class=""], [id=""], a[href="#"] {
      background: rgba(yellow, .2);
      border: 1px solid gold;
    }
  }
}
/* ------ */
/* Layout */
/* ------ */

:root {
  /* hr - horizontal rule preset */
  --hr {
    border: 0;
    border-bottom: var(--hr-size) solid var(--hr-color);
    height: 0;
    padding: 0;
    margin: 1.5rem 0
  }

  --layout {
    hr {
      @apply --hr
    }
  }
}
/* ------ */
/* Button */
/* ------ */

:root {
  /* base styling needed for --button */
  --button-base {
    @apply --transition;
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    background-color: var(--button-color);
    color: var(--button-text-color);
    user-select: none;


    &:hover, &:active {
      border: var(--button-outline-stroke) solid color(var(--button-color) shade(20%));
      background-color: color(var(--button-color) shade(20%));
    }
  }

  /* the button */
  --button {
    @apply --button-base;
    padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    font-size: var(--button-med-size);
  }

  /* the button ,larger */
  --button-large {
    @apply --button-base;
    padding: calc(var(--button-large-size) * .6) calc(var(--button-large-size));
    font-size: var(--button-large-size);
  }

  /* the button, smaller */
  --button-small {
    @apply --button-base;
    padding: calc(var(--button-small-size) * .6) calc(var(--button-small-size) * .8) calc(var(--button-small-size) * .5);
    font-size: var(--button-small-size);
  }

  /* outline button */
  --button-outline {
    @apply --button-base;
    background: transparent;
    color: var(--base-gray);
    border: var(--button-outline-stroke) solid var(--base-gray);

    &:hover {
      background: inherit;
      border: var(--button-outline-stroke) solid var(--button-color);
      color: var(--button-color);
    }
  }

  /* disabled button */
  --button-disabled {
    @apply --button-base;
    cursor: not-allowed;
    background-color: color(var(--base-gray) tint(70%));
    border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));

    &:hover {
      background-color: color(var(--base-gray) tint(70%));
      border: var(--button-outline-stroke) solid color(var(--base-gray) tint(70%));
    }
  }

  /* additive */
  --buttons {
    button,
    .btn {
      @apply --button;

      &.large {
        @apply --button-large;
      }

      &.small {
        @apply --button-small;
      }

      &.outline {
        @apply --button-outline;
      }

      &.disabled {
        @apply --button-disabled;
      }
    }
  }
}
/* ------ */
/* Forms */
/* ------ */

:root {

  /* Todo: Select (Q+A) */

  --input {
    @apply --transition;
    font-size: var(--base-font-size);
    font-weight: var(--base-font-weight);
    border: var(--input-stroke) solid var(--input-border-color);
    border-radius: var(--global-border-radius);
    height: var(--input-height);
    outline: none;
    padding: var(--input-padding);
    background: var(--input-bg-color);
    font-family: inherit;
    width: var(--input-width);
    max-width: var(--input-max-width);
    min-width: var(--input-min-width);
    color: var(--input-text-color);
    font-size: inherit;
    line-height: inherit;

    &:hover {
      border-color: var(--input-border-hover-color)
    }

    &:focus {
      box-shadow: inset 0 0 0 var(--input-focus-inset) var(--input-focus-color);
      border: 1px solid var(--input-focus-color);
      outline: none
    }
  }

  --input-warning {
    border-color: var(--color-warning);

    &:focus {
      border-color: color(var(--color-warning) a(50%));
      box-shadow: 0 0 .6rem color(var(--color-warning) a(50%))
    }
  }


  --autofill {
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -webkit-text-fill-color: var(--input-autofill-text-color)
    }

    &:-moz-autofill {
      -moz-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -moz-text-fill-color: var(--input-autofill-text-color)
    }

    &:-o-autofill {
      -o-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -o-text-fill-color: var(--input-autofill-text-color)
    }

    &:-khtml-autofill {
      -khtml-box-shadow: 0 0 0px 1000px var(--input-autofill-bg-color) inset;
      -khtml-text-fill-color: var(--input-autofill-text-color)
    }
  }


  --textarea {
    @apply --input;
    @apply --autofill;
    color: inherit;
    font-size: inherit;
    line-height: inherit;
  }

  --label {
    display: var(--label-display);
    text-align: var(--label-align);
    min-width: var(--label-min-width)
  }

  --file-input {
    box-sizing: border-box;
    font-size: var(--base-font-size);
    cursor: pointer;
    line-height: 1em;
    text-decoration: none;
    display: inline-block;
    border: var(--button-outline-stroke) solid var(--button-color);
    border-radius: var(--global-border-radius);
    outline: 0;
    padding: .4rem;
    position: relative;
    width: 200px;
    color: var(--button-text-color);

    &:after {
      box-sizing: inherit;
      text-align: center;
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--button-color);
      content: 'Choose a file ...';
      padding: calc(var(--button-med-size) * .6) calc(var(--button-med-size) * .8);
    }
    &:hover:after, &:active:after {
      background-color: color(var(--button-color) shade(20%));
    }
  }

  --fieldset {
    border: var(--fieldset-border);
    border-radius: var(--global-border-radius)
  }

  /* select box */
  /* Must be applied to element wrapping <select> tag. */
  /* TODO: ie 10 + 11 support ? */

  /*todo: focus highlight*/
  --select-box {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    width: var(--input-width);
    min-width: var(--input-min-width);
    max-width: var(--input-max-width);
    border-radius: var(--global-border-radius);
    background-color: var(--input-select-bg-color);
    /*max-width: var(--input-max-width) */

    & select {
      width: 100%;
      margin: 0;
      outline: none;
      padding: var(--input-padding);
      font-size: var(--base-font-size); /*anything except 16px will create page zoom on ios */
      border: none;

      &:focus, &:active {
        border: none;
        box-shadow: none
      }

      & option {
        padding: .3rem .7rem
      }
    }

    &:after {
      content: '';
      position: absolute;
      top: calc(50% - (var(--input-select-arrow-size) / 2));
      right: .75em;
      z-index: 2;
      display: none;
      pointer-events: none
    }

    @supports ( -webkit-appearance: none ) or ( appearance: none ) or ( ( -moz-appearance: none ) and ( mask-type: alpha ) ) {
      border: var(--fieldset-border);

      &:after {
        display: block;
        border-left: var(--input-select-arrow-size) solid transparent;
        border-right: var(--input-select-arrow-size) solid transparent;
        border-top: var(--input-select-arrow-size) solid var(--input-select-arrow-color)
      }

      & select {
        border-radius: var(--global-border-radius);
        border: var(--input-stroke) solid color(var(--base-gray) tint(70%));
        padding-right: 2em;
        background: none;
        border: 0px solid transparent;
        appearance: none;
        color: inherit;
        font-size: inherit;
        line-height: inherit;
    	  text-transform: none;
        margin: 0;
      }

      &:hover {
        border-color: var(--input-border-hover-color)
      }

      &:focus {
        box-shadow: inset 0 0 0 1px var(--input-focus-color);
        border: 1px solid var(--input-focus-color);
        outline: none
      }
    }
  }


  /* Controls - pure css styling for Radio buttons and Checkboxes */

  --controls {
    input[type='radio'],
    input[type='checkbox'] {
      box-sizing: border-box;
      position: absolute;
      display: none;
    }

    input[type='radio'][disabled],
    input[type='checkbox'][disabled] {
      cursor: not-allowed;
    }

    input[type='radio'] + label,
    input[type='checkbox'] + label {
      box-sizing: border-box;
      position: relative;
      display: block;
      padding-left: calc(1.875 * var(--control-label-text-size));
      cursor: pointer;
      vertical-align: middle;
      font-size: var(--control-label-text-size);
      line-height: 1.3em;
      margin-bottom: calc(0.5 * var(--control-label-text-size));

      &:hover {
        &:before {
          border: 1px solid var(--input-control-active)
        }
      }

      &:before {
        box-sizing: border-box;
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: calc(1.25 * var(--control-label-text-size));
        height: calc(1.25 * var(--control-label-text-size));
        content: '';
        transition: border .2s ease;
        border: 1px solid var(--input-control-border);
        background: var(--input-control)
      }

      &:after {
        box-sizing: border-box;
        position: absolute;
        content: '';
        transition: all .2s ease
      }
    }

    input[type='radio'][disabled] + label,
    input[type='checkbox'][disabled] + label {
      cursor: not-allowed;
      color: var(--input-control-disabled);

      &:hover,
      &:before,
      &:after {
        cursor: not-allowed
      }
      &:before {
        border-color: var(--input-control-disabled)
      }
    }

    input[type='radio']:checked + label,
    input[type='checkbox']:checked + label {

      &:after {
        transform: scale(1);
      }
    }

    input[type='radio'] + label {
      &:before {
        border-radius: 50%;
      }

      &:after {
        top: calc(0.375 * var(--control-label-text-size));
        left: calc(0.375 * var(--control-label-text-size));
        width: calc(0.5 * var(--control-label-text-size));
        height: calc(0.5 * var(--control-label-text-size));
        border-radius: 50%;
        background: var(--input-control-active);
        transform: scale(0);
      }
    }

    input[type='radio']:checked + label {
      &:before {
        border: 1px solid var(--input-control-active);
      }
    }

    input[type='radio']:checked[disabled] + label {
      &:before {
        border: 1px solid var(--input-control-disabled-checked);
      }

      &:after {
        background: var(--input-control-disabled-checked);
      }
    }

    input[type='checkbox'] + label {
      &:before {
        border-radius: var(--global-border-radius);
      }

      &:after {
        top: calc(0.125 * var(--control-label-text-size));
        left: calc(0.4375 * var(--control-label-text-size));
        width: calc(0.375 * var(--control-label-text-size));
        height: calc(0.75 * var(--control-label-text-size));
        transform: scale(0) rotate(45deg);
        border-width: calc(0.125 * var(--control-label-text-size));
        border-style: solid;
        border-color: var(--input-control-checkmark);
        border-top: 0;
        border-left: 0;
      }
    }

    input[type='checkbox']:checked + label {
      &:before {
        border: var(--input-control-active);
        background: var(--input-control-active);
      }

      &:after {
        transform: scale(1) rotate(45deg)
      }
    }

    input[type='checkbox']:checked[disabled] + label {
      &:before {
        border: var(--input-control-disabled-checked);
        background: var(--input-control-disabled-checked);
      }
    }
  }


  /* Additive @apply: Forms */

  /* WARNING: Creates classes in your css and styles them - not to be used inside */
  /* an element. */

  /* Adds default form styling */

  --forms {
    input[type='email'],
    input[type='number'],
    input[type='password'],
    input[type='search'],
    input[type='tel'],
    input[type='text'],
    input[type='url'],
    input[type='color'],
    input[type='date'],
    input[type='datetime'],
    input[type='datetime-local'],
    input[type='month'],
    input[type='time'],
    input[type='week'] {
      @apply --input;
      @apply --autofill;
    }

    textarea {
      @apply --textarea;
    }

    /*overwrites for color */
    input[type='color'] {
      padding: .2rem;
      width: 2.5rem;
      max-width: 2.5rem;
      min-width: 2.5rem;
      height: 1.5em;
    }

    input[type='reset'] {
      @apply --button;
      @apply --button-outline;
    }

    input[type='button'],
    input[type='submit'] {
      @apply --button;
    }

    input[type='file'] {
      @apply --file-input;
    }

    select {
      @apply --input
    }

    /* Radio buttons and Checkboxes */
    @apply --controls;




    label {
      @apply --label;
    }

    fieldset {
      @apply --fieldset;
    }

    .select-box {
      @apply --select-box;
    }
  }
}
/* ------ */
/* Tables */
/* ------ */

:root {

  /* Basic Table */
  --table-basic {
    border-collapse: collapse;
    border-spacing: 0;
    max-width: 100%;
    width: 100%;
    border-radius: 0;
    margin: 1.5rem 0 3em; /* ? */
    position: relative;
    text-align: left;

    & th, & td {
      border: var(--default-border);
      padding: .5em 1em;
    }
  }

  /* Minimal Table */
  --table-minimal {
    text-align: left;
    border-collapse: collapse;
    border-spacing: 0;
    margin: 1.5rem 0 3em;  /* ? */
    max-width: 100%;
    width: 100%;
    border-radius: 0;

    & td, & th {
      line-height: var(--line-height);
      padding: .5em 1em;
    }

    & td {
      border-top: var(--default-border);
    }
  }

  /* Table utility: Zebra Stripes */
  --zebra-stripes {
    & tr:nth-child(odd) td {
      background: rgba(0,0,0,.03);
    }
  }

  /* Table utility: HOver rows */
  --hover-rows {
    & tr {
      @apply --transition;

      &:hover {
        background: rgba(0,0,0,.08);
      }
    }
  }

  /* Addtive mixin: Tables */
  --tables {
    table {
      @apply --table-basic
    }
  }
}
